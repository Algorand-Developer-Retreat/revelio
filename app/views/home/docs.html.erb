<% content_for :title, "API Documentation" %>

<div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
  <h1 class="text-3xl font-bold mb-6">API Documentation</h1>
  
  <div class="prose max-w-none">
    <p class="lead text-lg text-gray-600 mb-8">
      Revelio provides a RESTful API that allows developers to programmatically access contract information. 
      This documentation covers the available endpoints, request parameters, and response formats.
    </p>
    
    <div class="bg-blue-50 border-l-4 border-blue-500 p-4 mb-8">
      <div class="flex">
        <div class="flex-shrink-0">
          <svg class="h-5 w-5 text-blue-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
            <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2h-1V9z" clip-rule="evenodd" />
          </svg>
        </div>
        <div class="ml-3">
          <p class="text-sm text-blue-700">
            All API requests are served over HTTPS. Base URL: <code>https://<%= request.host %>/api/v1</code>
          </p>
        </div>
      </div>
    </div>
    
    <h2 id="authentication" class="text-2xl font-bold mt-8 mb-4">Authentication</h2>
    <p>
      Currently, the API is publicly accessible for read operations. Future versions may require authentication.
    </p>
    
    <h2 id="endpoints" class="text-2xl font-bold mt-8 mb-4">Endpoints</h2>
    
    <div class="mt-6 border border-gray-200 rounded-md overflow-hidden">
      <div class="bg-gray-50 px-4 py-3 border-b border-gray-200">
        <h3 class="text-lg font-medium text-gray-900">Get Contract by App ID</h3>
      </div>
      <div class="px-4 py-5 sm:p-6">
        <div class="mb-4">
          <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-green-100 text-green-800">
            GET
          </span>
          <code class="ml-2 text-sm bg-gray-100 px-2 py-1 rounded">/api/v1/contracts/:app_id</code>
        </div>
        
        <p class="mb-4">Retrieves the contract information for the specified application ID.</p>
        
        <h4 class="font-medium text-gray-700 mt-4 mb-2">Parameters</h4>
        <div class="overflow-x-auto">
          <table class="min-w-full divide-y divide-gray-200">
            <thead class="bg-gray-50">
              <tr>
                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Name</th>
                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Type</th>
                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Description</th>
              </tr>
            </thead>
            <tbody class="bg-white divide-y divide-gray-200">
              <tr>
                <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">app_id</td>
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">Integer</td>
                <td class="px-6 py-4 text-sm text-gray-500">The application ID of the contract</td>
              </tr>
            </tbody>
          </table>
        </div>
        
        <h4 class="font-medium text-gray-700 mt-6 mb-2">Example Request</h4>
        <pre class="bg-gray-800 text-white p-4 rounded-md overflow-x-auto"><code class="language-bash">curl -X GET "https://<%= request.host %>/api/v1/contracts/12345"</code></pre>
        
        <h4 class="font-medium text-gray-700 mt-6 mb-2">Example Response</h4>
        <div class="bg-gray-50 rounded-md overflow-hidden">
          <div class="flex justify-between items-center p-2 bg-gray-100">
            <button onclick="toggleJsonCollapse('json-example-1')" class="text-sm text-blue-600 hover:text-blue-800 flex items-center">
              <span id="toggle-text-example-1">Collapse</span>
              <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 ml-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
              </svg>
            </button>
            <button onclick="copyJsonToClipboard('json-example-1')" class="text-sm bg-gray-200 hover:bg-gray-300 px-2 py-1 rounded">
              Copy JSON
            </button>
          </div>
          <div id="json-example-1" class="json-container">
            <pre class="rounded-md overflow-x-auto"><code class="language-json">{
  "id": 1,
  "name": "Example Contract",
  "version": 1.0,
  "app_id": 12345,
  "round_valid_from": 10000000,
  "address": "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890",
  "arc56": {
    "name": "Example Contract",
    "methods": [
      {
        "name": "hello",
        "args": [],
        "returns": { "type": "string" }
      }
    ]
  },
  "project_abbreviation": "EXMP"
}</code></pre>
          </div>
        </div>
      </div>
    </div>
    
    <div class="mt-6 border border-gray-200 rounded-md overflow-hidden">
      <div class="bg-gray-50 px-4 py-3 border-b border-gray-200">
        <h3 class="text-lg font-medium text-gray-900">Get Contract by App ID and Round Number</h3>
      </div>
      <div class="px-4 py-5 sm:p-6">
        <div class="mb-4">
          <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-green-100 text-green-800">
            GET
          </span>
          <code class="ml-2 text-sm bg-gray-100 px-2 py-1 rounded">/api/v1/contracts/:app_id/by_round/:round_number</code>
        </div>
        
        <p class="mb-4">Retrieves the contract information for the specified application ID at a specific round number.</p>
        
        <h4 class="font-medium text-gray-700 mt-4 mb-2">Parameters</h4>
        <div class="overflow-x-auto">
          <table class="min-w-full divide-y divide-gray-200">
            <thead class="bg-gray-50">
              <tr>
                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Name</th>
                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Type</th>
                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Description</th>
              </tr>
            </thead>
            <tbody class="bg-white divide-y divide-gray-200">
              <tr>
                <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">app_id</td>
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">Integer</td>
                <td class="px-6 py-4 text-sm text-gray-500">The application ID of the contract</td>
              </tr>
              <tr>
                <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">round_number</td>
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">Integer</td>
                <td class="px-6 py-4 text-sm text-gray-500">The blockchain round number</td>
              </tr>
            </tbody>
          </table>
        </div>
        
        <h4 class="font-medium text-gray-700 mt-6 mb-2">Example Request</h4>
        <pre class="bg-gray-800 text-white p-4 rounded-md overflow-x-auto"><code class="language-bash">curl -X GET "https://<%= request.host %>/api/v1/contracts/12345/by_round/10000000"</code></pre>
        
        <h4 class="font-medium text-gray-700 mt-6 mb-2">Example Response</h4>
        <div class="bg-gray-50 rounded-md overflow-hidden">
          <div class="flex justify-between items-center p-2 bg-gray-100">
            <button onclick="toggleJsonCollapse('json-example-2')" class="text-sm text-blue-600 hover:text-blue-800 flex items-center">
              <span id="toggle-text-example-2">Collapse</span>
              <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 ml-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
              </svg>
            </button>
            <button onclick="copyJsonToClipboard('json-example-2')" class="text-sm bg-gray-200 hover:bg-gray-300 px-2 py-1 rounded">
              Copy JSON
            </button>
          </div>
          <div id="json-example-2" class="json-container">
            <pre class="rounded-md overflow-x-auto"><code class="language-json">{
  "id": 1,
  "name": "Example Contract",
  "version": 1.0,
  "app_id": 12345,
  "round_valid_from": 10000000,
  "address": "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890",
  "arc56": {
    "name": "Example Contract",
    "methods": [
      {
        "name": "hello",
        "args": [],
        "returns": { "type": "string" }
      }
    ]
  },
  "project_abbreviation": "EXMP"
}</code></pre>
          </div>
        </div>
      </div>
    </div>
    
    <h2 id="error-handling" class="text-2xl font-bold mt-8 mb-4">Error Handling</h2>
    <p>
      The API uses conventional HTTP response codes to indicate the success or failure of an API request.
      In general, codes in the 2xx range indicate success, codes in the 4xx range indicate an error that
      failed given the information provided, and codes in the 5xx range indicate an error with the server.
    </p>
    
    <div class="overflow-x-auto mt-4">
      <table class="min-w-full divide-y divide-gray-200">
        <thead class="bg-gray-50">
          <tr>
            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Code</th>
            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Description</th>
          </tr>
        </thead>
        <tbody class="bg-white divide-y divide-gray-200">
          <tr>
            <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">200 - OK</td>
            <td class="px-6 py-4 text-sm text-gray-500">The request was successful.</td>
          </tr>
          <tr>
            <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">404 - Not Found</td>
            <td class="px-6 py-4 text-sm text-gray-500">The specified resource could not be found.</td>
          </tr>
          <tr>
            <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">500 - Server Error</td>
            <td class="px-6 py-4 text-sm text-gray-500">An error occurred on the server.</td>
          </tr>
        </tbody>
      </table>
    </div>
    
    <h4 class="font-medium text-gray-700 mt-6 mb-2">Example Error Response</h4>
    <div class="bg-gray-50 rounded-md overflow-hidden">
      <div class="flex justify-between items-center p-2 bg-gray-100">
        <button onclick="toggleJsonCollapse('json-example-error')" class="text-sm text-blue-600 hover:text-blue-800 flex items-center">
          <span id="toggle-text-example-error">Collapse</span>
          <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 ml-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
          </svg>
        </button>
        <button onclick="copyJsonToClipboard('json-example-error')" class="text-sm bg-gray-200 hover:bg-gray-300 px-2 py-1 rounded">
          Copy JSON
        </button>
      </div>
      <div id="json-example-error" class="json-container">
        <pre class="rounded-md overflow-x-auto"><code class="language-json">{
  "error": "Contract not found"
}</code></pre>
      </div>
    </div>
    
    <h2 id="rate-limiting" class="text-2xl font-bold mt-8 mb-4">Rate Limiting</h2>
    <p>
      Currently, there are no rate limits in place. However, we reserve the right to implement rate limiting
      in the future to ensure the stability and availability of the API for all users.
    </p>
    
    <h2 id="support" class="text-2xl font-bold mt-8 mb-4">Support</h2>
    <p>
      If you have any questions or need assistance with the API, please contact our support team at
      <a href="mailto:support@example.com" class="text-blue-600 hover:text-blue-800">support@example.com</a>.
    </p>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    document.querySelectorAll('pre code').forEach((block) => {
      hljs.highlightBlock(block);
    });
  });
  
  function toggleJsonCollapse(id) {
    const container = document.getElementById(id);
    const toggleId = 'toggle-text-' + id.replace('json-example-', '');
    const toggleText = document.getElementById(toggleId);
    
    if (container.classList.contains('collapsed')) {
      container.classList.remove('collapsed');
      toggleText.textContent = 'Collapse';
    } else {
      container.classList.add('collapsed');
      toggleText.textContent = 'Expand';
    }
  }

  function copyJsonToClipboard(id) {
    const jsonElement = document.getElementById(id);
    const jsonContent = jsonElement.querySelector('code').textContent;
    
    navigator.clipboard.writeText(jsonContent).then(() => {
      // Show a temporary success message
      const button = event.currentTarget;
      const originalText = button.textContent;
      button.textContent = 'Copied!';
      button.classList.add('bg-green-100', 'text-green-800');
      setTimeout(() => {
        button.textContent = originalText;
        button.classList.remove('bg-green-100', 'text-green-800');
      }, 2000);
    }).catch(err => {
      console.error('Failed to copy: ', err);
      const button = event.currentTarget;
      button.textContent = 'Failed!';
      button.classList.add('bg-red-100', 'text-red-800');
      setTimeout(() => {
        button.textContent = 'Copy JSON';
        button.classList.remove('bg-red-100', 'text-red-800');
      }, 2000);
    });
  }
</script>

<style>
  /* Improve JSON display */
  .json-container pre {
    margin: 0;
    padding: 1rem;
    white-space: pre-wrap;
    word-break: break-word;
    max-width: 100%;
  }
  
  /* Only add horizontal scrolling when absolutely necessary */
  .json-container pre code {
    display: block;
    overflow-x: auto;
  }
  
  /* Collapsed state styling */
  .json-container.collapsed pre {
    max-height: 200px;
    overflow: hidden;
    position: relative;
  }
  
  .json-container.collapsed pre::after {
    content: "";
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    height: 70px;
    background: linear-gradient(to bottom, rgba(249, 250, 251, 0), rgba(249, 250, 251, 1));
    pointer-events: none;
  }
  
  /* Ensure tables don't overflow */
  .overflow-x-auto {
    max-width: 100%;
  }
  
  /* Improve code display in tables */
  td code, th code {
    white-space: nowrap;
    word-break: keep-all;
  }
</style>